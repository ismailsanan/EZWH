{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ismae\\\\EzWh\\\\code\\\\client\\\\src\\\\NewUserForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport { useState } from 'react';\nimport './NewClientForm.css';\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction NewUserForm(props) {\n  _s();\n\n  const [validated, setValidated] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [type, setType] = useState(\"customer\");\n  const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n  const types = ['customer', 'qualityEmployee', 'clerk', 'deliveryEmployee', 'supplier'];\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setValidated(true);\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    } else {\n      const newUser = {\n        username: email,\n        name: name,\n        surname: surname,\n        password: password,\n        type: type\n      };\n      props.addUser(newUser);\n      setName(\"\");\n      setSurname(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n      setType(\"customer\");\n      setValidated(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Registration  \",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      className: \"pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" New User \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoFocus: true,\n              type: \"text\",\n              id: \"nameField\",\n              value: name,\n              required: true,\n              onChange: ev => setName(ev.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please insert a name.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Surname:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              id: \"surnameField\",\n              value: surname,\n              required: true,\n              onChange: ev => setSurname(ev.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please insert a surname.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            size: \"lg\",\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              id: \"emailField\",\n              value: email,\n              required: true,\n              onChange: ev => setEmail(ev.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), email.length === 0 && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please insert an email address.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 52\n            }, this), regex.test(email) === false && email.length > 0 && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please insert an email address. '@' must be included.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              id: \"pswField\",\n              value: password,\n              required: true,\n              onChange: ev => setPassword(ev.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please insert a password.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), props.manager && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"User Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                id: \"selectType\",\n                onChange: e => {\n                  setType(e.target.value);\n                },\n                defaultValue: \"customer\",\n                children: types.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: p,\n                  children: p\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          xs: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"clearButton\",\n            onClick: () => {\n              setName(\"\");\n              setSurname(\"\");\n              setEmail(\"\");\n              setPassword(\"\");\n              setType(\"customer\");\n              setValidated(false);\n            },\n            type: \"button\",\n            variant: \"secondary\",\n            className: \"float-right\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          xs: 3,\n          className: \"pl-5\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            color: \"black\",\n            id: \"submitButton\",\n            type: \"submit\",\n            className: \"float-right \",\n            children: \"Create new user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewUserForm, \"bG/nKTmyOgtnJ/4PN11ERJ4hcRU=\");\n\n_c = NewUserForm;\nexport default NewUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewUserForm\");","map":{"version":3,"sources":["C:/Users/ismae/EzWh/code/client/src/NewUserForm.js"],"names":["React","Form","Row","Col","Button","useState","toast","NewUserForm","props","validated","setValidated","email","setEmail","name","setName","surname","setSurname","password","setPassword","type","setType","regex","types","handleSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","newUser","username","addUser","ev","target","value","length","test","manager","e","map","p"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { useState } from 'react'\r\nimport './NewClientForm.css'\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction NewUserForm(props) {\r\n    const [validated, setValidated] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [surname, setSurname] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [type, setType] = useState(\"customer\");\r\n    const regex =\r\n        /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    const types = ['customer','qualityEmployee','clerk','deliveryEmployee','supplier'];\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setValidated(true);\r\n        const form = event.currentTarget;\r\n\r\n        if (form.checkValidity() === false) {\r\n            event.stopPropagation();\r\n\r\n        } else {\r\n            const newUser = {\r\n                username: email,\r\n                name: name,\r\n                surname: surname,\r\n                password: password,\r\n                type: type\r\n\r\n            };\r\n\r\n            props.addUser(newUser);\r\n            setName(\"\"); \r\n            setSurname(\"\"); \r\n            setEmail(\"\"); \r\n            setPassword(\"\");\r\n            setType(\"customer\"); \r\n            setValidated(false);\r\n        }\r\n        \r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"Registration  \" >\r\n\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit} className=\"pt-5\">\r\n                <br />\r\n                <Row className=\"justify-content-center text-center\">\r\n                    <h2> New User </h2>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group  >\r\n                            <Form.Label>Name:</Form.Label>\r\n                            <Form.Control\r\n                                autoFocus\r\n                                type='text'\r\n                                id=\"nameField\"\r\n                                value={name}\r\n                                required\r\n                                onChange={ev => setName(ev.target.value)} />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert a name.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group  >\r\n                            <Form.Label>Surname:</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                id=\"surnameField\"\r\n                                value={surname}\r\n                                required\r\n                                onChange={ev => setSurname(ev.target.value)} />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert a surname.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group size=\"lg\" controlId=\"email\">\r\n                            <Form.Label>Email:</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                id=\"emailField\"\r\n                                value={email}\r\n                                required\r\n                                onChange={ev => setEmail(ev.target.value)} />\r\n                            {email.length === 0 && <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert an email address.\r\n                            </Form.Control.Feedback>}\r\n                            {regex.test(email) === false && email.length > 0 &&\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Please insert an email address. '@' must be included.\r\n                                </Form.Control.Feedback>\r\n                            }\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group controlId='password'>\r\n                            <Form.Label>Password:</Form.Label>\r\n                            <Form.Control\r\n                                type='password'\r\n                                id=\"pswField\"\r\n                                value={password}\r\n                                required\r\n                                onChange={ev => setPassword(ev.target.value)} />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert a password.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                { props.manager && <>\r\n                <br />\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group>\r\n                            <Form.Label>User Type:</Form.Label>\r\n                            <Form.Select\r\n                                id=\"selectType\"\r\n                                onChange={(e) => {setType(e.target.value)}}\r\n                                defaultValue=\"customer\"\r\n                                >\r\n                                {types.map((p) => (\r\n                                    <option value={p}>\r\n                                        {p}\r\n                                    </option>\r\n                                ))}\r\n                                \r\n                            </Form.Select>\r\n                        \r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                </>}\r\n                <Row>\r\n                    <Col md={6} xs={6}/>\r\n                    <Col md={2} xs={1}>\r\n                        <Button id=\"clearButton\" onClick={() => { setName(\"\"); setSurname(\"\"); setEmail(\"\"); setPassword(\"\"); setType(\"customer\"); setValidated(false); }} type=\"button\" variant=\"secondary\" className=\"float-right\">Clear</Button>\r\n                    </Col>\r\n                    <Col md={2} xs={3} className=\"pl-5\">\r\n                        <Button variant=\"warning\" color=\"black\" id=\"submitButton\" type=\"submit\" className=\"float-right \">Create new user</Button>\r\n                    </Col>\r\n                    <Col md={2} xs={2}/>\r\n                </Row>\r\n            </Form >\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NewUserForm;"]},"metadata":{},"sourceType":"module"}