{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ismae\\\\EzWh\\\\code\\\\client\\\\src\\\\EditPositionDeleteSKU.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Row, Col, Button, Modal } from 'react-bootstrap';\nimport { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './NewClientForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditPositionDeleteSKU(props) {\n  _s();\n\n  const [validated, setValidated] = useState(false);\n  const [id, setId] = useState(props.skus && props.skus.length > 0 ? props.skus[0].id : 0);\n  const list = props.positions.length > 0 ? props.positions.filter(p => {\n    let found = 0; //Filter free positions\n\n    for (let sku of props.skus) {\n      if (sku.position === p.barcode) {\n        found = 1;\n        break;\n      }\n    } //Filter position capable enough\n\n\n    for (let sku of props.skus) {\n      if (sku.id * 1 === id * 1) {\n        const skuVolume = sku.volume * sku.availableQuantity;\n        const skuWeight = sku.weight * sku.availableQuantity;\n\n        if (p.maxVolume < skuVolume || p.maxWeight < skuWeight) {\n          found = 1;\n          break;\n        }\n      }\n    }\n\n    if (found) return false;else return true;\n  }).map(pos => pos.barcode) : [];\n  const [barcode, setBarcode] = useState(list && list.length > 0 ? list[0] : \"\");\n  const [oldBarcode, setOldBarcode] = useState(\"\");\n  const [show, setShow] = useState(true);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setValidated(true);\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    } else {\n      if (props.delete) {\n        props.deleteSKU(id);\n        setId(0);\n      } else {\n        props.editSKUPosition(id, barcode);\n        setBarcode(\"\");\n        setOldBarcode(\"\");\n        setId(0);\n      }\n\n      setValidated(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Registration\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"What SKU you want to modify?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Select SKU\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                id: \"selectSKU\",\n                onChange: e => {\n                  setId(e.target.value);\n                  const id = e.target.value;\n\n                  for (let sku of props.skus) {\n                    if (sku.id * 1 === id * 1) {\n                      if (sku.position) setOldBarcode(sku.position);\n                    }\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Select SKU\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 23\n                }, this), props.skus.length > 0 ? props.skus.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: p.id,\n                  children: p.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 27\n                }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            className: \"m-3 ml-2 md-1 \",\n            children: \" Back to your page \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          id: \"submitButton\",\n          disabled: props.skus && props.skus <= 0,\n          onClick: () => {\n            for (let sku of props.skus) {\n              if (sku.id * 1 === id * 1) {\n                if (sku.position) setOldBarcode(sku.position);\n              }\n            }\n\n            setShow(false);\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      className: \"pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: [\" \", props.delete ? \"Delete\" : \"Edit\", \" SKU \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Id:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoFocus: true,\n              type: \"number\",\n              id: \"idField\",\n              disabled: true,\n              value: id,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please insert a valid id.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), !props.delete && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Old Position:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                autoFocus: true,\n                type: \"text\",\n                id: \"oldBarcodeField\",\n                disabled: true,\n                value: oldBarcode === \"\" ? \"No Position Assigned\" : oldBarcode,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please insert a valid barcode.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"New Position:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                autoFocus: true,\n                id: \"barcodeField\",\n                required: true,\n                onChange: e => {\n                  setBarcode(e.target.value);\n                },\n                children: props.positions.length > 0 ? props.positions.filter(p => {\n                  let found = 0; //Filter free positions\n\n                  for (let sku of props.skus) {\n                    if (sku.position === p.barcode) {\n                      found = 1;\n                      break;\n                    }\n                  } //Filter position capable enough\n\n\n                  for (let sku of props.skus) {\n                    if (sku.id * 1 === id * 1) {\n                      const skuVolume = sku.volume * sku.availableQuantity;\n                      const skuWeight = sku.weight * sku.availableQuantity;\n\n                      if (p.maxVolume < skuVolume || p.maxWeight < skuWeight) {\n                        found = 1;\n                        break;\n                      }\n                    }\n                  }\n\n                  if (found) return false;else return true;\n                }).map(pos => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: pos.barcode,\n                  children: pos.barcode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 45\n                }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please insert a valid barcode.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          xs: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          xs: 3,\n          className: \"pl-5\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: props.delete ? \"danger\" : \"warning\",\n            color: \"black\",\n            id: \"submitButton\",\n            type: \"submit\",\n            className: \"float-right \",\n            children: [props.delete ? \"Delete\" : \"Edit\", \" SKU\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditPositionDeleteSKU, \"dvYKBRdDW7CqvzbNaAkCrcG1mUk=\");\n\n_c = EditPositionDeleteSKU;\nexport default EditPositionDeleteSKU;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPositionDeleteSKU\");","map":{"version":3,"sources":["C:/Users/ismae/EzWh/code/client/src/EditPositionDeleteSKU.js"],"names":["React","Form","Row","Col","Button","Modal","useState","Link","EditPositionDeleteSKU","props","validated","setValidated","id","setId","skus","length","list","positions","filter","p","found","sku","position","barcode","skuVolume","volume","availableQuantity","skuWeight","weight","maxVolume","maxWeight","map","pos","setBarcode","oldBarcode","setOldBarcode","show","setShow","handleSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","delete","deleteSKU","editSKUPosition","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Row, Col, Button, Modal } from 'react-bootstrap';\r\nimport { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport './NewClientForm.css'\r\n\r\nfunction EditPositionDeleteSKU (props){\r\n\r\n  const [validated, setValidated] = useState(false);\r\n  const [id, setId] = useState (props.skus && props.skus.length > 0 ? (props.skus[0].id):(0));\r\n\r\n    const list = props.positions.length > 0 ? (\r\n      props.positions.filter((p)=>{\r\n        let found = 0;\r\n        //Filter free positions\r\n        for (let sku of props.skus){\r\n          if (sku.position === p.barcode){\r\n            found = 1;\r\n            break;\r\n          }\r\n        }\r\n        //Filter position capable enough\r\n        for (let sku of props.skus){\r\n          if (sku.id*1 === id*1){\r\n            const skuVolume= sku.volume * sku.availableQuantity;\r\n            const skuWeight= sku.weight * sku.availableQuantity;\r\n            if(p.maxVolume < skuVolume || p.maxWeight < skuWeight)\r\n            {\r\n              found = 1;\r\n              break;\r\n            }\r\n            \r\n          }\r\n        }\r\n        if (found)\r\n          return false;\r\n        else\r\n          return true;\r\n        \r\n      })\r\n      \r\n      .map((pos) => (\r\n        pos.barcode\r\n      ))\r\n    ) : (\r\n      []\r\n    )\r\n\r\n    const [barcode, setBarcode] = useState(list && list.length >0 ? (list[0]):(\"\"));\r\n    const [oldBarcode, setOldBarcode] = useState(\"\");\r\n    const [show,setShow] = useState (true);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setValidated(true);\r\n        const form = event.currentTarget;\r\n    \r\n        if (form.checkValidity() === false) {\r\n            event.stopPropagation();\r\n        } \r\n        else {\r\n            if(props.delete){\r\n                props.deleteSKU(id);\r\n                setId(0);\r\n            }\r\n            else{\r\n            props.editSKUPosition(id,barcode);\r\n                setBarcode(\"\");\r\n                setOldBarcode(\"\");\r\n                setId(0);\r\n            }\r\n            \r\n            setValidated(false);\r\n        }    \r\n    };\r\n\r\n    return (\r\n        <div className=\"Registration\" >\r\n\r\n            {/* MODAL TO SELECT SKU */}\r\n            <Modal show={show} \r\n            backdrop=\"static\"\r\n            keyboard={false}>\r\n            <Modal.Header>\r\n              <Modal.Title>What SKU you want to modify?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Col>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Form.Label>Select SKU</Form.Label>\r\n                    <Form.Select\r\n                      id=\"selectSKU\"\r\n                      onChange={(e) => {setId(e.target.value)\r\n                                        const id= e.target.value;\r\n                                        for (let sku of props.skus){\r\n                                            if(sku.id*1 === id*1){\r\n                                                if(sku.position)\r\n                                                  setOldBarcode(sku.position);\r\n                                            }\r\n                                        }\r\n                    }}\r\n                    >\r\n                      <option>\r\n                        Select SKU\r\n                      </option>\r\n                      {props.skus.length > 0 ? (\r\n                        props.skus.map((p) => (\r\n                          <option value={p.id}>\r\n                            {p.id}\r\n                          </option>\r\n                        ))\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Link to=\"/login\"> \r\n                    <Button variant=\"secondary\" className=\"m-3 ml-2 md-1 \"> Back to your page </Button> \r\n              </Link>\r\n              <Button variant=\"warning\" id=\"submitButton\" disabled={props.skus && (props.skus <= 0)} onClick={() => { \r\n                  for (let sku of props.skus){\r\n                    if(sku.id*1 === id*1){\r\n                      if(sku.position)\r\n                        setOldBarcode(sku.position); \r\n                    }\r\n                }\r\n                  setShow(false) }}>\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit} className=\"pt-5\">\r\n                <Row className=\"justify-content-center\">\r\n                    <h2 className='text-center'> {props.delete?(\"Delete\"):(\"Edit\")} SKU </h2>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group>\r\n                            <Form.Label>Id:</Form.Label>\r\n                            <Form.Control\r\n                                autoFocus\r\n                                type='number'\r\n                                id=\"idField\"\r\n                                disabled={true}\r\n                                value={id}\r\n                                required\r\n                                />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert a valid id.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                {!props.delete &&<>\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group>\r\n                            <Form.Label>Old Position:</Form.Label>\r\n                            <Form.Control\r\n                                autoFocus\r\n                                type='text'\r\n                                id=\"oldBarcodeField\"\r\n                                disabled={true}\r\n                                value={oldBarcode === \"\"?(\"No Position Assigned\"):(oldBarcode)}\r\n                                required\r\n                               />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert a valid barcode.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group>\r\n                            <Form.Label>New Position:</Form.Label>\r\n                            <Form.Select\r\n                                autoFocus\r\n                                id=\"barcodeField\"\r\n                                required\r\n                                onChange={(e) => {setBarcode(e.target.value)}}>\r\n\r\n                                        {props.positions.length > 0 ? (\r\n                                          props.positions.filter((p)=>{\r\n                                            let found = 0;\r\n                                            //Filter free positions\r\n                                            for (let sku of props.skus){\r\n                                              if (sku.position === p.barcode){\r\n                                                found = 1;\r\n                                                break;\r\n                                              }\r\n                                            }\r\n                                            //Filter position capable enough\r\n                                            for (let sku of props.skus){\r\n                                              if (sku.id*1 === id*1){\r\n                                                const skuVolume= sku.volume * sku.availableQuantity;\r\n                                                const skuWeight= sku.weight * sku.availableQuantity;\r\n                                                if(p.maxVolume < skuVolume || p.maxWeight < skuWeight)\r\n                                                {\r\n                                                  found = 1;\r\n                                                  break;\r\n                                                }\r\n                                                \r\n                                              }\r\n                                            }\r\n                                            if (found)\r\n                                              return false;\r\n                                            else\r\n                                              return true;\r\n                                            \r\n                                          })\r\n                                          \r\n                                          .map((pos) => (\r\n                                            <option value={pos.barcode}>\r\n                                              {pos.barcode}\r\n                                            </option>\r\n                                          ))\r\n                                        ) : (\r\n                                          <></>\r\n                                        )} \r\n                      </Form.Select>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert a valid barcode.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                <br />\r\n                </>}\r\n                <Row>\r\n                    <Col md={6} xs={6}/>\r\n                   \r\n                    <Col md={1} xs={3} className=\"pl-5\">\r\n                        <Button variant={props.delete ?(\"danger\"):(\"warning\")} color=\"black\" id=\"submitButton\" type=\"submit\" className=\"float-right \">{props.delete ?(\"Delete\"):(\"Edit\")} SKU</Button>\r\n                    </Col>\r\n                    <Col md={3} xs={2}/>\r\n                </Row>\r\n            </Form >\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default EditPositionDeleteSKU;"]},"metadata":{},"sourceType":"module"}