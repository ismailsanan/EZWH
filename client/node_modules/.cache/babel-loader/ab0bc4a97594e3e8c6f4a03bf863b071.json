{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ismae\\\\EzWh\\\\code\\\\client\\\\src\\\\TestRO.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Row, Col, Button, Modal } from 'react-bootstrap';\nimport { useState } from 'react';\nimport './NewClientForm.css';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TestRO(props) {\n  _s();\n\n  const [validated, setValidated] = useState(false);\n  const [id, setId] = useState(props.RO && props.RO.length > 0 ? props.RO[0].id : 0);\n  const [restockOrder, setRestockOrder] = useState(undefined);\n  const [show, setShow] = useState(true);\n  const [toDoTest, setToDoTest] = useState([]);\n  let array = [];\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setValidated(true);\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    } else {\n      props.editRO(id, {\n        newState: \"TESTED\"\n      });\n      setId(0);\n      setValidated(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Registration\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"What Restock Order you want to see?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Select Restock Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                id: \"selectRO\",\n                onChange: e => {\n                  setId(e.target.value);\n                  const ident = e.target.value;\n\n                  for (let Ro of props.RO) {\n                    if (ident * 1 === Ro.id * 1) {\n                      setRestockOrder(Ro);\n                      Ro.skuItems.forEach(el => {\n                        props.testDescriptors.filter(t => t.idSKU * 1 === el.SKUId * 1).forEach(t => {\n                          array.push(t.id + \",\" + el.rfid);\n                        });\n                      });\n                      setToDoTest(array);\n                      break;\n                    }\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Select Restock Order\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 23\n                }, this), props.RO.length > 0 ? props.RO.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: p.id,\n                  children: p.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 27\n                }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            className: \"m-3 ml-2 md-1 \",\n            children: \" Back to your page \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          id: \"submitButton\",\n          disabled: props.RO && props.RO <= 0,\n          onClick: () => {\n            setShow(false);\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      className: \"pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \" Test SKU Items of Restock Order \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Id Restock Order:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoFocus: true,\n              type: \"number\",\n              id: \"idField\",\n              disabled: true,\n              value: id,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please insert a valid id.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), restockOrder && /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"Products\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: restockOrder.skuItems.length === 0 ? 'd-none' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                className: \"p-0\",\n                children: \"SKU Items: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 67\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), restockOrder.skuItems.map((el, pos) => /*#__PURE__*/_jsxDEV(Row, {\n              className: \"border m-0 pt-1 pb-1\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xs: 12,\n                className: \"ps-3\",\n                children: [pos + 1, \") RFID: \", el.rfid, \" - SKU ID: \", el.SKUId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"TEST TO BE EXECUTED:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 49\n              }, this), props.testDescriptors.filter(t => t.idSKU * 1 === el.SKUId * 1).map((t, pos, arr) => {\n                array.push(t.id + \",\" + el.rfid);\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      children: [\"ID: \", t.id, \" - NAME \", t.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 45\n                    }, this), toDoTest.includes(t.id + \",\" + el.rfid) && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"success\",\n                          onClick: () => {\n                            setToDoTest(oldList => {\n                              return oldList.filter(s => s !== t.id + \",\" + el.rfid);\n                            });\n                            const date = new Date();\n                            const options = {\n                              year: 'numeric',\n                              month: 'numeric',\n                              day: 'numeric'\n                            };\n                            const TRDate = date.toLocaleString('ja-JP', options).replace(',', '');\n                            const TR = {\n                              rfid: el.rfid,\n                              idTestDescriptor: t.id,\n                              Date: TRDate,\n                              Result: true\n                            };\n                            props.addTestResult(TR);\n                          },\n                          children: \"Passed\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 150,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 47\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"danger\",\n                          onClick: () => {\n                            setToDoTest(oldList => {\n                              return oldList.filter(s => s !== t.id + \",\" + el.rfid);\n                            });\n                            const date = new Date();\n                            const options = {\n                              year: 'numeric',\n                              month: 'numeric',\n                              day: 'numeric'\n                            };\n                            const TRDate = date.toLocaleString('ja-JP', options).replace(',', '');\n                            const TR = {\n                              rfid: el.rfid,\n                              idTestDescriptor: t.id,\n                              Date: TRDate,\n                              Result: false\n                            };\n                            props.addTestResult(TR);\n                          },\n                          children: \"Failed\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 166,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 47\n                      }, this)]\n                    }, void 0, true)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 43\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 43\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 54\n                  }, this)]\n                }, void 0, true);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 69\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          xs: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          xs: 3,\n          className: \"pl-5\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            color: \"black\",\n            disabled: toDoTest.length !== 0,\n            id: \"submitButton\",\n            type: \"submit\",\n            className: \"float-right \",\n            children: \"Tests Completed on Restock Order \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TestRO, \"lOgUI5iUYZbvjAT9cCMDUP4md9Y=\");\n\n_c = TestRO;\nexport default TestRO;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestRO\");","map":{"version":3,"sources":["C:/Users/ismae/EzWh/code/client/src/TestRO.js"],"names":["React","Form","Row","Col","Button","Modal","useState","Link","TestRO","props","validated","setValidated","id","setId","RO","length","restockOrder","setRestockOrder","undefined","show","setShow","toDoTest","setToDoTest","array","handleSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","editRO","newState","e","target","value","ident","Ro","skuItems","forEach","el","testDescriptors","filter","t","idSKU","SKUId","push","rfid","map","p","pos","arr","name","includes","oldList","s","date","Date","options","year","month","day","TRDate","toLocaleString","replace","TR","idTestDescriptor","Result","addTestResult"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Row, Col, Button, Modal } from 'react-bootstrap';\r\nimport { useState } from 'react'\r\nimport './NewClientForm.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction TestRO (props){\r\n  const [validated, setValidated] = useState(false);\r\n  const [id, setId] = useState (props.RO && props.RO.length > 0 ? (props.RO[0].id):(0));\r\n  const [restockOrder, setRestockOrder] = useState (undefined);\r\n  const [show,setShow] = useState (true);\r\n  const [toDoTest,setToDoTest] = useState ([]);\r\n  let array=[];\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setValidated(true);\r\n        const form = event.currentTarget;\r\n    \r\n        if (form.checkValidity() === false) {\r\n            event.stopPropagation();\r\n        } \r\n        else {\r\n            props.editRO(id,{newState:\"TESTED\"});\r\n            setId(0);\r\n            setValidated(false);\r\n        }    \r\n    };\r\n\r\n    return (\r\n        <div className=\"Registration\" >\r\n\r\n            {/* MODAL TO SELECT RESTOCK ORDER DELIVERED */}\r\n            <Modal show={show} \r\n            backdrop=\"static\"\r\n            keyboard={false}>\r\n            <Modal.Header>\r\n              <Modal.Title>What Restock Order you want to see?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Col>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Form.Label>Select Restock Order</Form.Label>\r\n                    <Form.Select\r\n                      id=\"selectRO\"\r\n                      onChange={(e) => {setId(e.target.value)\r\n                                        const ident = e.target.value;\r\n                                        for (let Ro of props.RO){\r\n                                          if(ident*1 === Ro.id*1){\r\n                                            setRestockOrder(Ro);\r\n\r\n                                            \r\n    \r\n                                              Ro.skuItems.forEach((el) => {\r\n                                                  props.testDescriptors.filter((t)=>t.idSKU*1 === el.SKUId*1).forEach((t)=>{\r\n                                                        array.push(t.id+\",\"+el.rfid);\r\n                                                    })\r\n                                              })\r\n                                            \r\n                                          \r\n                                            setToDoTest(array);\r\n\r\n                                            break;\r\n                                          }\r\n                                        }\r\n                    }}\r\n                    >\r\n                      <option>\r\n                        Select Restock Order\r\n                      </option>\r\n                      {props.RO.length > 0 ? (\r\n                        props.RO.map((p) => (\r\n                          <option value={p.id}>\r\n                            {p.id}\r\n                          </option>\r\n                        ))\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Link to=\"/login\"> \r\n                    <Button variant=\"secondary\" className=\"m-3 ml-2 md-1 \"> Back to your page </Button> \r\n              </Link>\r\n              <Button variant=\"warning\" id=\"submitButton\" disabled={props.RO && (props.RO <= 0)} onClick={() => { \r\n                  setShow(false) }}>\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit} className=\"pt-5\">\r\n                <Row className=\"justify-content-center\">\r\n                    <h2 className='text-center'> Test SKU Items of Restock Order </h2>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group>\r\n                            <Form.Label>Id Restock Order:</Form.Label>\r\n                            <Form.Control\r\n                                autoFocus\r\n                                type='number'\r\n                                id=\"idField\"\r\n                                disabled={true}\r\n                                value={id}\r\n                                required\r\n                                />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert a valid id.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                <br />\r\n                {restockOrder &&<Row>\r\n                    <Col>\r\n                        <Form.Group id=\"Products\">\r\n                            <Form.Label className={restockOrder.skuItems.length===0 ? ('d-none'):('')}>\r\n                                <b className='p-0'>SKU Items: </b><br/>             \r\n                            </Form.Label>\r\n                                    \r\n                            {restockOrder.skuItems.map((el, pos) => <Row className=\"border m-0 pt-1 pb-1\">\r\n                                        <Col xs={12} className=\"ps-3\">\r\n                                            {pos+1}) RFID: {el.rfid} - SKU ID: {el.SKUId}\r\n                                        </Col>\r\n                                        \r\n                                          <Row>\r\n                                            <Col>\r\n                                            <b>TEST TO BE EXECUTED:</b>\r\n                                            </Col>\r\n                                          </Row>\r\n                                          <br /><br/>\r\n                                          {props.testDescriptors.filter((t)=>t.idSKU*1 === el.SKUId*1).map((t,pos,arr)=>{\r\n                                          array.push(t.id+\",\"+el.rfid);\r\n                                          return (<>\r\n                                          <Row>\r\n                                            <Col>\r\n                                              ID: {t.id} - NAME {t.name}\r\n                                            </Col>\r\n                                            {toDoTest.includes(t.id+\",\"+el.rfid) &&\r\n                                            <>\r\n                                              <Col>\r\n                                                <Button variant = 'success' onClick={()=>{\r\n                                                  setToDoTest((oldList)=>{return oldList.filter((s)=>s!==t.id+\",\"+el.rfid)})\r\n                                                  const date = new Date();\r\n                                                  const options = { year: 'numeric', month: 'numeric', day: 'numeric'};\r\n                                                  const TRDate = date.toLocaleString('ja-JP',options).replace(',','');\r\n                                                  const TR={\r\n                                                    rfid:el.rfid,\r\n                                                    idTestDescriptor:t.id,\r\n                                                    Date:TRDate,\r\n                                                    Result: true\r\n\r\n                                                  }\r\n                                                  props.addTestResult(TR);\r\n                                                }}>Passed</Button>\r\n                                              </Col>\r\n                                              <Col>\r\n                                                <Button variant = 'danger' onClick={()=>{\r\n                                                  setToDoTest((oldList)=>{return oldList.filter((s)=>s!==t.id+\",\"+el.rfid)})\r\n                                                  const date = new Date();\r\n                                                  const options = { year: 'numeric', month: 'numeric', day: 'numeric'};\r\n                                                  const TRDate = date.toLocaleString('ja-JP',options).replace(',','');\r\n                                                  const TR={\r\n                                                    rfid:el.rfid,\r\n                                                    idTestDescriptor:t.id,\r\n                                                    Date:TRDate,\r\n                                                    Result: false\r\n\r\n                                                  }\r\n                                                  props.addTestResult(TR);\r\n                                                }}>Failed</Button>\r\n                                              </Col>\r\n                                            </>\r\n                                          }\r\n                                          </Row> \r\n                                          <br /><br/><br/>\r\n                                          </>) }\r\n                                          )}\r\n                                       \r\n                                        \r\n\r\n                                    </Row>)}\r\n\r\n                                    \r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>}\r\n                <br />\r\n                <Row>\r\n                    <Col md={6} xs={6}/>\r\n                   \r\n                    <Col md={1} xs={3} className=\"pl-5\">\r\n                        <Button variant=\"warning\" color=\"black\" disabled={toDoTest.length!==0} id=\"submitButton\" type=\"submit\" className=\"float-right \">Tests Completed on Restock Order </Button>\r\n                    </Col>\r\n                    <Col md={3} xs={2}/>\r\n                </Row>\r\n            </Form >\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TestRO;"]},"metadata":{},"sourceType":"module"}