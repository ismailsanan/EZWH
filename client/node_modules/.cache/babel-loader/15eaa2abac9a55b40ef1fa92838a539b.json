{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ismae\\\\EzWh\\\\code\\\\client\\\\src\\\\NewEditTestDescriptor.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Row, Col, Button, Modal } from 'react-bootstrap';\nimport { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './NewClientForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction NewEditTestDescriptor(props) {\n  _s();\n\n  const [validated, setValidated] = useState(false);\n  const [id, setId] = useState(props.testDescriptors && props.testDescriptors.length > 0 ? props.testDescriptors[0].id : 0);\n  const [idSku, setIdSku] = useState(props.skus && props.skus.length > 0 ? props.skus[0].id : 0);\n  const [oldIdSku, setOldIdSku] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [changeSku, setChangeSku] = useState(false);\n  const [show, setShow] = useState(props.edit ? true : false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setValidated(true);\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    } else {\n      if (props.edit) {\n        const newTestDescriptor = {\n          newProcedureDescription: description,\n          newName: name,\n          newIdSKU: idSku\n        };\n        props.editTestDescriptor(id, newTestDescriptor);\n      } else {\n        const newTestDescriptor = {\n          procedureDescription: description,\n          name: name,\n          idSKU: idSku\n        };\n        props.addTestDescriptor(newTestDescriptor);\n        setDescription(\"\");\n        setName(\"\");\n        setIdSku(0);\n        setId(0);\n      }\n\n      setValidated(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Registration\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"What Test Descriptor you want to modify?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Select Test Descriptor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                id: \"selectTD\",\n                onChange: e => {\n                  setId(e.target.value);\n                  const id = e.target.value;\n\n                  for (let td of props.testDescriptors) {\n                    if (td.id * 1 === id * 1) {\n                      setDescription(td.procedureDescription);\n                      setName(td.name);\n                      setIdSku(td.idSKU);\n                      setOldIdSku(td.idSKU);\n                    }\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Select Test Descriptor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this), props.testDescriptors.length > 0 ? props.testDescriptors.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: p.id,\n                  children: p.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 27\n                }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            className: \"m-3 ml-2 md-1 \",\n            children: \" Back to your page \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          id: \"submitButton\",\n          disabled: props.testDescriptors && props.testDescriptors <= 0,\n          onClick: () => {\n            for (let td of props.testDescriptors) {\n              if (td.id * 1 === id * 1) {\n                setDescription(td.procedureDescription);\n                setName(td.name);\n                setIdSku(td.idSKU);\n                setOldIdSku(td.idSKU);\n              }\n            }\n\n            setShow(false);\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      className: \"pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: [\" \", props.edit ? \"Edit\" : \"New\", \" Test Descriptor \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoFocus: true,\n              type: \"text\",\n              id: \"nameField\",\n              value: name,\n              required: true,\n              onChange: ev => setName(ev.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please insert valid name.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Procedure Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoFocus: true,\n              type: \"text\",\n              id: \"descriptionField\",\n              value: description,\n              required: true,\n              onChange: ev => setDescription(ev.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please insert a valid procedure description.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Id SKU:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), props.edit && /*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Check to edit sku id\",\n              value: changeSku,\n              onChange: () => {\n                if (changeSku) {\n                  setIdSku(oldIdSku);\n                }\n\n                setChangeSku(oldval => !oldval);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 44\n            }, this), props.edit && !changeSku && /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoFocus: true,\n              type: \"number\",\n              id: \"idSkuField\",\n              value: idSku,\n              disabled: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this), (!props.edit || changeSku) && /*#__PURE__*/_jsxDEV(Form.Select, {\n              id: \"selectSKU\",\n              onChange: e => {\n                setIdSku(e.target.value);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select SKU\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), props.skus.length > 0 ? props.skus.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: p.id,\n                children: [p.id, \" - \", p.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          xs: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), !props.edit && /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"clearButton\",\n            onClick: () => {\n              setDescription(\"\");\n              setName(\"\");\n              setIdSku(0);\n              setId(0);\n              setValidated(false);\n            },\n            type: \"button\",\n            variant: \"secondary\",\n            className: \"float-right\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          xs: 3,\n          className: \"pl-5\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            color: \"black\",\n            id: \"submitButton\",\n            type: \"submit\",\n            className: \"float-right \",\n            children: [props.edit ? \"Edit\" : \"Create\", \" Test Descriptor\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewEditTestDescriptor, \"qpmOFLwqBB9OoDvshGcIMaSozaY=\");\n\n_c = NewEditTestDescriptor;\nexport default NewEditTestDescriptor;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewEditTestDescriptor\");","map":{"version":3,"sources":["C:/Users/ismae/EzWh/code/client/src/NewEditTestDescriptor.js"],"names":["React","Form","Row","Col","Button","Modal","useState","Link","NewEditTestDescriptor","props","validated","setValidated","id","setId","testDescriptors","length","idSku","setIdSku","skus","oldIdSku","setOldIdSku","description","setDescription","name","setName","changeSku","setChangeSku","show","setShow","edit","handleSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","newTestDescriptor","newProcedureDescription","newName","newIdSKU","editTestDescriptor","procedureDescription","idSKU","addTestDescriptor","e","target","value","td","map","p","ev","oldval"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Row, Col, Button, Modal } from 'react-bootstrap';\r\nimport { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport './NewClientForm.css'\r\n\r\nfunction NewEditTestDescriptor(props) {\r\n    const [validated, setValidated] = useState(false);\r\n    const [id, setId] = useState (props.testDescriptors && props.testDescriptors.length > 0 ? (props.testDescriptors[0].id):(0));\r\n    const [idSku, setIdSku] = useState (props.skus && props.skus.length > 0 ? (props.skus[0].id):(0));\r\n    const [oldIdSku, setOldIdSku] = useState (0);\r\n    const [description, setDescription] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [changeSku, setChangeSku] = useState(false);\r\n\r\n    const [show,setShow] = useState (props.edit?(true):(false));\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setValidated(true);\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false ) {\r\n            event.stopPropagation();\r\n        \r\n        } else {\r\n            if(props.edit){\r\n                const newTestDescriptor = {\r\n                    newProcedureDescription:description,\r\n                    newName: name,\r\n                    newIdSKU: idSku\r\n                };\r\n    \r\n                props.editTestDescriptor(id,newTestDescriptor);\r\n            }\r\n            else{\r\n                const newTestDescriptor = {\r\n                    procedureDescription:description,\r\n                    name: name,\r\n                    idSKU: idSku\r\n                };\r\n    \r\n            props.addTestDescriptor(newTestDescriptor);\r\n            setDescription(\"\"); \r\n            setName(\"\");\r\n            setIdSku(0);\r\n            setId(0);\r\n            \r\n            }\r\n\r\n            \r\n            setValidated(false);\r\n        }\r\n        \r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"Registration\" >\r\n\r\n            {/* MODAL TO SELECT TEST DESCRIPTOR */}\r\n            <Modal show={show} \r\n            backdrop=\"static\"\r\n            keyboard={false}>\r\n            <Modal.Header>\r\n              <Modal.Title>What Test Descriptor you want to modify?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Col>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Form.Label>Select Test Descriptor</Form.Label>\r\n                    <Form.Select\r\n                      id=\"selectTD\"\r\n                      onChange={(e) => {setId(e.target.value)\r\n                                        const id= e.target.value;\r\n                                        for (let td of props.testDescriptors){\r\n                                            if(td.id*1 === id*1){\r\n                                                setDescription(td.procedureDescription); \r\n                                                setName(td.name); \r\n                                                setIdSku(td.idSKU);\r\n                                                setOldIdSku(td.idSKU);\r\n                                            }\r\n                                        }\r\n                    }}\r\n                    >\r\n                    <option>\r\n                        Select Test Descriptor\r\n                      </option>  \r\n                      {props.testDescriptors.length > 0 ? (\r\n                        props.testDescriptors.map((p) => (\r\n                          <option value={p.id}>\r\n                            {p.id}\r\n                          </option>\r\n                        ))\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Link to=\"/login\"> \r\n                    <Button variant=\"secondary\" className=\"m-3 ml-2 md-1 \"> Back to your page </Button> \r\n              </Link>\r\n              <Button variant=\"warning\" id=\"submitButton\" disabled={props.testDescriptors && (props.testDescriptors <= 0)} onClick={() => { \r\n                  for (let td of props.testDescriptors){\r\n                    if(td.id*1 === id*1){\r\n                        setDescription(td.procedureDescription); \r\n                        setName(td.name); \r\n                        setIdSku(td.idSKU);\r\n                        setOldIdSku(td.idSKU);\r\n                    }\r\n                }\r\n                  setShow(false) }}>\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit} className=\"pt-5\">\r\n                <Row className=\"justify-content-center\">\r\n                    <h2 className='text-center'> {props.edit?(\"Edit\"):(\"New\")} Test Descriptor </h2>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group  >\r\n                            <Form.Label>Name:</Form.Label>\r\n                            <Form.Control\r\n                                autoFocus\r\n                                type='text'\r\n                                id=\"nameField\"\r\n                                value={name}\r\n                                required\r\n                                onChange={ev => setName(ev.target.value)} />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert valid name.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group  >\r\n                            <Form.Label>Procedure Description:</Form.Label>\r\n                            <Form.Control\r\n                                autoFocus\r\n                                type='text'\r\n                                id=\"descriptionField\"\r\n                                value={description}\r\n                                required\r\n                                onChange={ev => setDescription(ev.target.value)} />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert a valid procedure description.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>                \r\n                <br />   \r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group>\r\n                            <Form.Label>Id SKU:</Form.Label>\r\n                            {props.edit && <Form.Check \r\n                                label={\"Check to edit sku id\"}\r\n                                value={changeSku}\r\n                                onChange={()=>{\r\n                                    if(changeSku){\r\n                                        setIdSku(oldIdSku);\r\n                                    }\r\n                                    setChangeSku((oldval)=>!oldval)}}\r\n                            />}\r\n                            { props.edit && !changeSku &&\r\n                                \r\n                                <Form.Control\r\n                                autoFocus\r\n                                type='number'\r\n                                id=\"idSkuField\"\r\n                                value={idSku}\r\n                                disabled={true}\r\n                                required/>\r\n                            }\r\n                            { (!props.edit || changeSku) &&\r\n                            <Form.Select\r\n                                id=\"selectSKU\"\r\n                                onChange={(e) => {setIdSku(e.target.value)}}\r\n                                >\r\n                                <option>\r\n                                    Select SKU\r\n                                </option>\r\n                                {props.skus.length > 0 ? (\r\n                                    props.skus.map((p) => (\r\n                                    <option value={p.id}>\r\n                                        {p.id} - {p.description}\r\n                                    </option>\r\n                                    ))\r\n                                ) : (\r\n                                    <></>\r\n                                )}\r\n                            </Form.Select>\r\n                        }\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6} xs={6}/>\r\n                    {!props.edit && <Col md={2} xs={1}>\r\n                        <Button id=\"clearButton\" onClick={() => {setDescription(\"\"); setName(\"\"); setIdSku(0); setId(0);  setValidated(false); }} type=\"button\" variant=\"secondary\" className=\"float-right\">Clear</Button>\r\n                    </Col>}\r\n                    <Col md={1} xs={3} className=\"pl-5\">\r\n                        <Button variant=\"warning\" color=\"black\" id=\"submitButton\" type=\"submit\" className=\"float-right \">{props.edit ?(\"Edit\"):(\"Create\")} Test Descriptor</Button>\r\n                    </Col>\r\n                    <Col md={3} xs={2}/>\r\n                </Row>\r\n            </Form >\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NewEditTestDescriptor;"]},"metadata":{},"sourceType":"module"}