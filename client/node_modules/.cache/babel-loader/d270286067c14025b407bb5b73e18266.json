{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ismae\\\\EzWh\\\\code\\\\client\\\\src\\\\NewPosition.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Row, Col, Button, Modal } from 'react-bootstrap';\nimport { useState } from 'react';\nimport './NewClientForm.css';\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction NewPosition(props) {\n  _s();\n\n  const [validated, setValidated] = useState(false);\n  const [barcode, setBarcode] = useState(props.positions && props.edit && props.positions.length > 0 ? props.positions[0].barcode : \"\");\n  const [aisleID, setAisleID] = useState(\"\");\n  const [row, setRow] = useState(0);\n  const [col, setCol] = useState(0);\n  const [maxVolume, setMaxVolume] = useState(0);\n  const [maxWeight, setMaxWeight] = useState(0);\n  const [occupiedVolume, setOccupiedVolume] = useState(0);\n  const [occupiedWeight, setOccupiedWeight] = useState(0);\n  const [show, setShow] = useState(props.edit ? true : false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setValidated(true);\n    const form = event.currentTarget;\n    let usedBarcode = -1;\n\n    if (!props.edit) {\n      for (let pos of props.positions) {\n        if (pos.barcode === barcode) usedBarcode = 1;\n      }\n    }\n\n    if (form.checkValidity() === false || usedBarcode !== -1 && !props.edit) {\n      event.stopPropagation();\n\n      if (usedBarcode !== -1 && !props.edit) {\n        toast.error(\"Barcode already used\", {\n          position: \"top-center\"\n        }, {\n          toastId: 6\n        });\n      }\n    } else {\n      if (props.edit) {\n        const newPosition = {\n          barcode: barcode,\n          newAisleID: aisleID,\n          newRow: row,\n          newCol: col,\n          newMaxWeight: maxWeight,\n          newMaxVolume: maxVolume,\n          newOccupiedWeight: occupiedWeight,\n          newOccupiedVolume: occupiedVolume\n        };\n        props.editPosition(newPosition);\n      } else {\n        const newPosition = {\n          barcode: barcode,\n          aisleID: aisleID,\n          row: row,\n          col: col,\n          maxWeight: maxWeight,\n          maxVolume: maxVolume\n        };\n        props.addPosition(newPosition);\n        setBarcode(\"\");\n        setAisleID(\"\");\n        setRow(0);\n        setCol(0);\n        setMaxVolume(0);\n        setMaxWeight(0);\n        setOccupiedVolume(0);\n        setOccupiedWeight(0);\n      }\n\n      setValidated(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Registration\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"What position you want to modify?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Select Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                id: \"selectPosition\",\n                onChange: e => {\n                  setBarcode(e.target.value);\n                  const barc = e.target.value;\n\n                  for (let pos of props.positions) {\n                    if (pos.barcode === barc) {\n                      setAisleID(pos.aisleID);\n                      setRow(pos.row);\n                      setCol(pos.col);\n                      setMaxVolume(pos.maxVolume);\n                      setMaxWeight(pos.maxWeight);\n                      setOccupiedVolume(pos.occupiedVolume);\n                      setOccupiedWeight(pos.occupiedWeight);\n                    }\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Select Barcode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this), props.positions.length > 0 ? props.positions.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: p.barcode,\n                  children: p.barcode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 27\n                }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            className: \"m-3 ml-2 md-1 \",\n            children: \" Back to your page \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          id: \"submitButton\",\n          disabled: props.positions && props.positions.length <= 0,\n          onClick: () => {\n            for (let pos of props.positions) {\n              if (pos.barcode === barcode) {\n                setAisleID(pos.aisleID);\n                setRow(pos.row);\n                setCol(pos.col);\n                setMaxVolume(pos.maxVolume);\n                setMaxWeight(pos.maxWeight);\n                setOccupiedVolume(pos.occupiedVolume);\n                setOccupiedWeight(pos.occupiedWeight);\n              }\n            }\n\n            setShow(false);\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      className: \"pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: [\" \", props.edit ? \"Edit\" : \"New\", \" Position \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Barcode:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoFocus: true,\n              type: \"text\",\n              id: \"barcodeField\",\n              disabled: props.edit,\n              value: barcode,\n              required: true,\n              onChange: ev => setBarcode(ev.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please insert a valid barcode.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Aisle ID (3 characters):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              id: \"aisleIDField\",\n              value: aisleID,\n              required: true,\n              onChange: ev => setAisleID(ev.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please insert an aisle ID.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"number\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Row:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              id: \"rowField\",\n              value: row,\n              min: 0,\n              required: true,\n              onChange: ev => setRow(ev.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please insert a row number.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"number\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Col:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              id: \"colField\",\n              value: col,\n              min: 0,\n              required: true,\n              onChange: ev => setCol(ev.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please insert a col number.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"number\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Max weight:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              id: \"maxWeightField\",\n              value: maxWeight,\n              min: 1,\n              required: true,\n              onChange: ev => setMaxWeight(ev.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please insert a max weight number.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"number\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Max volume:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              id: \"maxVolumeField\",\n              value: maxVolume,\n              min: 1,\n              required: true,\n              onChange: ev => setMaxVolume(ev.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please insert a max volume number.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), props.edit && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"number\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Occupied Weight:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                id: \"occupiedWeightField\",\n                value: occupiedWeight,\n                min: 0,\n                max: maxWeight,\n                required: true,\n                onChange: ev => setOccupiedWeight(ev.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please insert an occupied weight number.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"number\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Occupied volume:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                id: \"occupiedVolumeField\",\n                value: occupiedVolume,\n                min: 0,\n                max: maxVolume,\n                required: true,\n                onChange: ev => setOccupiedVolume(ev.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please insert an occupied volume number.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }, this), \" \"]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          xs: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this), !props.edit && /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"clearButton\",\n            onClick: () => {\n              setBarcode(\"\");\n              setAisleID(\"\");\n              setRow(0);\n              setCol(0);\n              setMaxVolume(0);\n              setMaxWeight(0);\n              setOccupiedVolume(0);\n              setOccupiedWeight(0);\n              setValidated(false);\n            },\n            type: \"button\",\n            variant: \"secondary\",\n            className: \"float-right\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          xs: 3,\n          className: \"pl-5\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            color: \"black\",\n            id: \"submitButton\",\n            type: \"submit\",\n            className: \"float-right \",\n            children: [props.edit ? \"Edit\" : \"Create\", \" Position\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          xs: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewPosition, \"CkFmqIZpUgceNMHQiublScPFtCM=\");\n\n_c = NewPosition;\nexport default NewPosition;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPosition\");","map":{"version":3,"sources":["C:/Users/ismae/EzWh/code/client/src/NewPosition.js"],"names":["React","Form","Row","Col","Button","Modal","useState","Link","toast","NewPosition","props","validated","setValidated","barcode","setBarcode","positions","edit","length","aisleID","setAisleID","row","setRow","col","setCol","maxVolume","setMaxVolume","maxWeight","setMaxWeight","occupiedVolume","setOccupiedVolume","occupiedWeight","setOccupiedWeight","show","setShow","handleSubmit","event","preventDefault","form","currentTarget","usedBarcode","pos","checkValidity","stopPropagation","error","position","toastId","newPosition","newAisleID","newRow","newCol","newMaxWeight","newMaxVolume","newOccupiedWeight","newOccupiedVolume","editPosition","addPosition","e","target","value","barc","map","p","ev"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Row, Col, Button, Modal } from 'react-bootstrap';\r\nimport { useState } from 'react'\r\nimport './NewClientForm.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction NewPosition(props) {\r\n    const [validated, setValidated] = useState(false);\r\n    const [barcode, setBarcode] = useState(props.positions && props.edit && props.positions.length>0 ? (props.positions[0].barcode):(\"\"));\r\n    const [aisleID, setAisleID] = useState(\"\");\r\n    const [row, setRow] = useState(0);\r\n    const [col, setCol] = useState(0);\r\n    const [maxVolume, setMaxVolume] = useState(0);\r\n    const [maxWeight, setMaxWeight] = useState(0);\r\n    const [occupiedVolume, setOccupiedVolume] = useState(0);\r\n    const [occupiedWeight, setOccupiedWeight] = useState(0);\r\n\r\n    const [show,setShow] = useState (props.edit?(true):(false));\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setValidated(true);\r\n        const form = event.currentTarget;\r\n        let usedBarcode = -1;\r\n        if(!props.edit){\r\n            for(let pos of props.positions){\r\n                if(pos.barcode === barcode)\r\n                    usedBarcode = 1;\r\n            }\r\n        }\r\n        if (form.checkValidity() === false || (usedBarcode !== -1 && !props.edit)) {\r\n            event.stopPropagation();\r\n            if (usedBarcode !== -1 && !props.edit) {\r\n                toast.error(\"Barcode already used\", { position: \"top-center\" },{toastId: 6})\r\n            }\r\n\r\n        } else {\r\n            if(props.edit){\r\n                const newPosition = {\r\n                    barcode:barcode,\r\n                    newAisleID:aisleID,\r\n                    newRow: row,\r\n                    newCol: col,\r\n                    newMaxWeight: maxWeight,\r\n                    newMaxVolume: maxVolume,\r\n                    newOccupiedWeight: occupiedWeight,\r\n                    newOccupiedVolume: occupiedVolume\r\n                };\r\n    \r\n                props.editPosition(newPosition);\r\n            }\r\n            else{\r\n            const newPosition = {\r\n                barcode:barcode,\r\n                aisleID:aisleID,\r\n                row: row,\r\n                col: col,\r\n                maxWeight: maxWeight,\r\n                maxVolume: maxVolume\r\n            };\r\n\r\n            props.addPosition(newPosition);\r\n            setBarcode(\"\"); \r\n            setAisleID(\"\"); \r\n            setRow(0); \r\n            setCol(0); \r\n            setMaxVolume(0); \r\n            setMaxWeight(0);  \r\n            setOccupiedVolume(0); \r\n            setOccupiedWeight(0); \r\n            }\r\n\r\n            \r\n            setValidated(false);\r\n        }\r\n        \r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"Registration\" >\r\n\r\n            {/* MODAL TO SELECT POSITION */}\r\n            <Modal show={show} \r\n            backdrop=\"static\"\r\n            keyboard={false}>\r\n            <Modal.Header>\r\n              <Modal.Title>What position you want to modify?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Col>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Form.Label>Select Position</Form.Label>\r\n                    <Form.Select\r\n                      id=\"selectPosition\"\r\n                      onChange={(e) => {setBarcode(e.target.value)\r\n                                        const barc= e.target.value;\r\n                                        for (let pos of props.positions){\r\n                                            if(pos.barcode === barc){\r\n                                                setAisleID(pos.aisleID); \r\n                                                setRow(pos.row); \r\n                                                setCol(pos.col); \r\n                                                setMaxVolume(pos.maxVolume); \r\n                                                setMaxWeight(pos.maxWeight);  \r\n                                                setOccupiedVolume(pos.occupiedVolume); \r\n                                                setOccupiedWeight(pos.occupiedWeight); \r\n                                            }\r\n                                        }\r\n                    }}\r\n                    >\r\n                    <option>\r\n                        Select Barcode\r\n                      </option>  \r\n                      {props.positions.length > 0 ? (\r\n                        props.positions.map((p) => (\r\n                          <option value={p.barcode}>\r\n                            {p.barcode}\r\n                          </option>\r\n                        ))\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Link to=\"/login\"> \r\n                    <Button variant=\"secondary\" className=\"m-3 ml-2 md-1 \"> Back to your page </Button> \r\n              </Link>\r\n              <Button variant=\"warning\" id=\"submitButton\" disabled={props.positions && (props.positions.length <= 0)} onClick={() => { \r\n                  for (let pos of props.positions){\r\n                    if(pos.barcode === barcode){\r\n                        setAisleID(pos.aisleID); \r\n                        setRow(pos.row); \r\n                        setCol(pos.col); \r\n                        setMaxVolume(pos.maxVolume); \r\n                        setMaxWeight(pos.maxWeight);  \r\n                        setOccupiedVolume(pos.occupiedVolume); \r\n                        setOccupiedWeight(pos.occupiedWeight); \r\n                    }\r\n                }\r\n                  setShow(false) }}>\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit} className=\"pt-5\">\r\n                <Row className=\"justify-content-center\">\r\n                    <h2 className='text-center'> {props.edit?(\"Edit\"):(\"New\")} Position </h2>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group  >\r\n                            <Form.Label>Barcode:</Form.Label>\r\n                            <Form.Control\r\n                                autoFocus\r\n                                type='text'\r\n                                id=\"barcodeField\"\r\n                                disabled={props.edit}\r\n                                value={barcode}\r\n                                required\r\n                                onChange={ev => setBarcode(ev.target.value)} />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert a valid barcode.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group  >\r\n                            <Form.Label>Aisle ID (3 characters):</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                id=\"aisleIDField\"\r\n                                value={aisleID}\r\n                                required\r\n                                onChange={ev => setAisleID(ev.target.value)} />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert an aisle ID.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group controlId='number'>\r\n                            <Form.Label>Row:</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                id=\"rowField\"\r\n                                value={row}\r\n                                min={0}\r\n                                required\r\n                                onChange={ev => setRow(ev.target.value)} />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert a row number.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group controlId='number'>\r\n                            <Form.Label>Col:</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                id=\"colField\"\r\n                                value={col}\r\n                                min={0}\r\n                                required\r\n                                onChange={ev => setCol(ev.target.value)} />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert a col number.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group controlId='number'>\r\n                            <Form.Label>Max weight:</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                id=\"maxWeightField\"\r\n                                value={maxWeight}\r\n                                min={1}\r\n                                required\r\n                                onChange={ev => setMaxWeight(ev.target.value)} />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert a max weight number.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group controlId='number'>\r\n                            <Form.Label>Max volume:</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                id=\"maxVolumeField\"\r\n                                value={maxVolume}\r\n                                min={1}\r\n                                required\r\n                                onChange={ev => setMaxVolume(ev.target.value)} />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert a max volume number.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                <br />\r\n                { props.edit && <>\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group controlId='number'>\r\n                            <Form.Label>Occupied Weight:</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                id=\"occupiedWeightField\"\r\n                                value={occupiedWeight}\r\n                                min={0}\r\n                                max={maxWeight}\r\n                                required\r\n                                onChange={ev => setOccupiedWeight(ev.target.value)} />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert an occupied weight number.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col xs={2} />\r\n                    <Col xs={8}>\r\n                        <Form.Group controlId='number'>\r\n                            <Form.Label>Occupied volume:</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                id=\"occupiedVolumeField\"\r\n                                value={occupiedVolume}\r\n                                min={0}\r\n                                max={maxVolume}\r\n                                required\r\n                                onChange={ev => setOccupiedVolume(ev.target.value)} />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please insert an occupied volume number.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                </Row>\r\n                <br /> </>}\r\n                <Row>\r\n                    <Col md={6} xs={6}/>\r\n                    {!props.edit && <Col md={2} xs={1}>\r\n                        <Button id=\"clearButton\" onClick={() => { setBarcode(\"\"); setAisleID(\"\"); setRow(0); setCol(0); setMaxVolume(0); setMaxWeight(0); setOccupiedVolume(0); setOccupiedWeight(0);  setValidated(false); }} type=\"button\" variant=\"secondary\" className=\"float-right\">Clear</Button>\r\n                    </Col>}\r\n                    <Col md={1} xs={3} className=\"pl-5\">\r\n                        <Button variant=\"warning\" color=\"black\" id=\"submitButton\" type=\"submit\" className=\"float-right \">{props.edit ?(\"Edit\"):(\"Create\")} Position</Button>\r\n                    </Col>\r\n                    <Col md={3} xs={2}/>\r\n                </Row>\r\n            </Form >\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NewPosition;"]},"metadata":{},"sourceType":"module"}